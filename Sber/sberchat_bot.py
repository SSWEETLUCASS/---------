import os
import logging
from dotenv import load_dotenv
from dialog_bot_sdk.bot import DialogBot
from dialog_bot_sdk.entities.messaging import UpdateMessage
from dialog_bot_sdk.models import InteractiveMedia, InteractiveButton
from dialog_bot_sdk.entities.messaging import MessageContentType, MessageHandler, CommandHandler

from openpyxl import load_workbook
from ai_agent import check_idea_with_gigachat_local, generate_files

load_dotenv()

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã –¥–ª—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ SSL
os.environ["REQUESTS_CA_BUNDLE"] = '/home/sigma.sbrf.ru@22754707/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/main_chat_bot/test/certs/SberCA.pem'
os.environ["GRPC_DEFAULT_SSL_ROOTS_FILE_PATH"] = '/home/sigma.sbrf.ru@22754707/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/main_chat_bot/test/certs/russiantrustedca.pem'

BOT_TOKEN = os.getenv("DIALOG_BOT_TOKEN")

TEMPLATE_FIELDS = [
    "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ß—Ç–æ —Ö–æ—Ç–∏–º —É–ª—É—á—à–∏—Ç—å?", "–ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—É–ø–∞—é—Ç –∞–≥–µ–Ω—Ç—É –Ω–∞ –≤—ã—Ö–æ–¥?",
    "–ö–∞–∫ –ø—Ä–æ—Ü–µ—Å—Å –≤—ã–≥–ª—è–¥–∏—Ç —Å–µ–π—á–∞—Å? as-is", "–ö–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω—É–∂–µ–Ω –æ—Ç –∞–≥–µ–Ω—Ç–∞?",
    "–î–æ—Å—Ç–∏–∂–∏–º—ã–π –∏–¥–µ–∞–ª(to-be)", "–ú–∞—Å—à—Ç–∞–± –ø—Ä–æ—Ü–µ—Å—Å–∞"
]

user_states = {}
agent_query_state = {}

def text_handler(message: UpdateMessage) -> None:
    user_id = message.sender.uid
    msg = message.message.text_message.text.strip()
    peer = message.peer

    if msg == "–£ –º–µ–Ω—è –µ—Å—Ç—å –∏–¥–µ—è!üíå":
        user_states[user_id] = {
            "mode": "choose",
            "step": None,
            "data": {},
            "giga_mode": False
        }
        bot.messaging.send_message(
            peer,
            "üìù –ö–∞–∫ —Ö–æ—Ç–∏—Ç–µ –æ–ø–∏—Å–∞—Ç—å –∏–¥–µ—é?",
            [InteractiveMedia(
                actions=[
                    InteractiveButton("–î–∞–≤–∞–π —à–∞–±–ª–æ–Ω!"),
                    InteractiveButton("–Ø –º–æ–≥—É –∏ —Å–∞–º –Ω–∞–ø–∏—Å–∞—Ç—å"),
                ]
            )]
        )
        return

    bot.messaging.send_message(
        peer,
        "üëã –ü—Ä–∏–≤–µ—Ç, @lucas_no_way! \n"
        "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–≥–µ–Ω—Ç–æ–ª–æ–≥, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å –∏–¥–µ—è–º–∏ –¥–ª—è AI-–∞–≥–µ–Ω—Ç–æ–≤.\n\n"
        "–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å:\n"
        "1. –£ –º–µ–Ω—è –µ—Å—Ç—å –∏–¥–µ—è!üí°\n"
        "   –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç–≤–æ—è –∏–¥–µ—è —É–Ω–∏–∫–∞–ª—å–Ω–∞!\n\n"
        "2. –ê–ò-–∞–≥–µ–Ω—Ç—ã?üìç\n"
        "   –ê–ò-–∞–≥–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –∑–¥–µ—Å—å –º—ã —Å–æ–±—Ä–∞–ª–∏ —Å–∞–º—ã–π —Å–≤–µ–∂–∏–π —Å–ø–∏—Å–æ–∫ –∞–≥–µ–Ω—Ç–æ–≤!\n\n"
        "3. –ö—Ç–æ –ø–æ–º–æ–∂–µ—Ç?üí¨\n"
        "   –ê–≥–µ–Ω—Ç–æ–≤ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –∏ –Ω–µ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏, –∫—Ç–æ –∏—Ö —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç. –î–∞–≤–∞–π –ø–æ–¥—Å–∫–∞–∂–µ–º, –∫—Ç–æ —ç—Ç–∏ –ª—é–¥–∏!\n\n"
        "4. –ü–æ–¥–¥–µ—Ä–∂–∫–∞üìù\n"
        "   –û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —á–∞—Ç-–±–æ—Ç–∞? –ü–∏—à–∏ –Ω–∞–º!\n\n"
        "–°–∫–æ—Ä–µ–µ –≤—ã–±–∏—Ä–∞–π, —á—Ç–æ –º—ã –±—É–¥–µ–º –¥–µ–ª–∞—Ç—åüëá",
        [InteractiveMedia(
            actions=[
                InteractiveButton("–£ –º–µ–Ω—è –µ—Å—Ç—å –∏–¥–µ—è!üíå", "–£ –º–µ–Ω—è –µ—Å—Ç—å –∏–¥–µ—è!üíå"),
                InteractiveButton("–ê–ò-–∞–≥–µ–Ω—Ç—ã?üìç", "–ê–ò-–∞–≥–µ–Ω—Ç—ã?üìç"),
                InteractiveButton("–ö—Ç–æ –ø–æ–º–æ–∂–µ—Ç?üí¨", "–ö—Ç–æ –ø–æ–º–æ–∂–µ—Ç?üí¨"),
                InteractiveButton("–ü–æ–¥–¥–µ—Ä–∂–∫–∞üìù", "–ü–æ–¥–¥–µ—Ä–∂–∫–∞üìù"),
            ]
        )]
    )

def start_handler(message: UpdateMessage) -> None:
    bot.messaging.send_message(message.peer, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —ç—Ö–æ-–±–æ—Ç, –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –∏–¥–µ—è–º–∏!")

def main():
    global bot
    bot = DialogBot.create_bot({
        "endpoint": "epbotsift.sberchat.sberbank.ru",
        "token": BOT_TOKEN,
        "is_secure": True,
    })

    bot.messaging.command_handler([
        CommandHandler(start_handler, "start", description="–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"),
    ])

    bot.messaging.message_handler([
        MessageHandler(text_handler, MessageContentType.TEXT_MESSAGE),
    ])

    print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
    while True:
        pass

if __name__ == "__main__":
    main()
